name: CI-CD

on:
  push:
    branches: [main]

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python Packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Install DVC
        run: pip install 'dvc[s3]'

      - name: DVC Pull
        run: dvc pull

      - name: Run Streamlit App in Background
        run: |
          nohup streamlit run app.py --server.port 8000 --server.headless true &
          sleep 30

      - name: Test Application
        run: pytest test_app.py

      - name: Stop Streamlit App
        run: pkill -f "streamlit run"

      - name: Upload Streamlit Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: streamlit-log
          path: nohup.out

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker Image to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPOSITORY_URI }}
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
